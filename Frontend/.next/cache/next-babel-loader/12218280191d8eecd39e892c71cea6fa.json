{"ast":null,"code":"import { useRouter } from \"next/router\";\nimport { useLayoutEffect } from \"react\";\nexport function range(size, start = 0) {\n  return [...Array(size).keys()].map(i => i + start);\n}\nexport function useURLQuery() {\n  const router = useRouter();\n  return new URLSearchParams(router.asPath.slice(router.pathname.length));\n}\nexport function useLockBodyScroll() {\n  useLayoutEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n    document.body.style.overflow = \"hidden\";\n    return () => document.body.style.overflow = originalStyle;\n  }, []);\n}\nexport function getMonthName(monthNum) {\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  return months[monthNum];\n}\nexport function validateEmail(email) {\n  const [emailBeforeAt, emailAfterAt] = email.split(\"@\");\n  const emailRegex = /^[-!#$%&'*+0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n\n  if (email.length > 254) {\n    return false;\n  } else if (!emailRegex.test(email)) {\n    return false;\n  } else if (emailBeforeAt.length > 64) {\n    return false;\n  } else if (emailAfterAt.split(\".\").some(segment => segment.length > 63)) {\n    return false;\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/vancetan/Documents/the-next-stage/Frontend/utils/index.js"],"names":["useRouter","useLayoutEffect","range","size","start","Array","keys","map","i","useURLQuery","router","URLSearchParams","asPath","slice","pathname","length","useLockBodyScroll","originalStyle","window","getComputedStyle","document","body","overflow","style","getMonthName","monthNum","months","validateEmail","email","emailBeforeAt","emailAfterAt","split","emailRegex","test","some","segment"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAO,SAASC,KAAT,CAAeC,IAAf,EAAqBC,KAAK,GAAG,CAA7B,EAAgC;AACrC,SAAO,CAAC,GAAGC,KAAK,CAACF,IAAD,CAAL,CAAYG,IAAZ,EAAJ,EAAwBC,GAAxB,CAA6BC,CAAD,IAAOA,CAAC,GAAGJ,KAAvC,CAAP;AACD;AAED,OAAO,SAASK,WAAT,GAAuB;AAC5B,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,SAAO,IAAIW,eAAJ,CAAoBD,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoBH,MAAM,CAACI,QAAP,CAAgBC,MAApC,CAApB,CAAP;AACD;AAED,OAAO,SAASC,iBAAT,GAA6B;AAClCf,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMgB,aAAa,GAAGC,MAAM,CAACC,gBAAP,CAAwBC,QAAQ,CAACC,IAAjC,EAAuCC,QAA7D;AACAF,IAAAA,QAAQ,CAACC,IAAT,CAAcE,KAAd,CAAoBD,QAApB,GAA+B,QAA/B;AACA,WAAO,MAAOF,QAAQ,CAACC,IAAT,CAAcE,KAAd,CAAoBD,QAApB,GAA+BL,aAA7C;AACD,GAJc,EAIZ,EAJY,CAAf;AAKD;AAED,OAAO,SAASO,YAAT,CAAsBC,QAAtB,EAAgC;AACrC,QAAMC,MAAM,GAAG,CACb,KADa,EAEb,KAFa,EAGb,KAHa,EAIb,KAJa,EAKb,KALa,EAMb,KANa,EAOb,KAPa,EAQb,KARa,EASb,KATa,EAUb,KAVa,EAWb,KAXa,EAYb,KAZa,CAAf;AAeA,SAAOA,MAAM,CAACD,QAAD,CAAb;AACD;AAED,OAAO,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AACnC,QAAM,CAACC,aAAD,EAAgBC,YAAhB,IAAgCF,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAtC;AACA,QAAMC,UAAU,GAAG,4HAAnB;;AACA,MAAIJ,KAAK,CAACb,MAAN,GAAe,GAAnB,EAAwB;AACtB,WAAO,KAAP;AACD,GAFD,MAEO,IAAI,CAACiB,UAAU,CAACC,IAAX,CAAgBL,KAAhB,CAAL,EAA6B;AAClC,WAAO,KAAP;AACD,GAFM,MAEA,IAAIC,aAAa,CAACd,MAAd,GAAuB,EAA3B,EAA+B;AACpC,WAAO,KAAP;AACD,GAFM,MAEA,IAAIe,YAAY,CAACC,KAAb,CAAmB,GAAnB,EAAwBG,IAAxB,CAA8BC,OAAD,IAAaA,OAAO,CAACpB,MAAR,GAAiB,EAA3D,CAAJ,EAAoE;AACzE,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useLayoutEffect } from \"react\";\n\nexport function range(size, start = 0) {\n  return [...Array(size).keys()].map((i) => i + start);\n}\n\nexport function useURLQuery() {\n  const router = useRouter();\n  return new URLSearchParams(router.asPath.slice(router.pathname.length));\n}\n\nexport function useLockBodyScroll() {\n  useLayoutEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n    document.body.style.overflow = \"hidden\";\n    return () => (document.body.style.overflow = originalStyle);\n  }, []);\n}\n\nexport function getMonthName(monthNum) {\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  return months[monthNum];\n}\n\nexport function validateEmail(email) {\n  const [emailBeforeAt, emailAfterAt] = email.split(\"@\");\n  const emailRegex = /^[-!#$%&'*+0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n  if (email.length > 254) {\n    return false;\n  } else if (!emailRegex.test(email)) {\n    return false;\n  } else if (emailBeforeAt.length > 64) {\n    return false;\n  } else if (emailAfterAt.split(\".\").some((segment) => segment.length > 63)) {\n    return false;\n  }\n\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}