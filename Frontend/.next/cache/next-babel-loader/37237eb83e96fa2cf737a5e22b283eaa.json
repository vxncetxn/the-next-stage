{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _construct from \"@babel/runtime/helpers/esm/construct\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/vancetan/Documents/the-next-stage/Frontend/components/Triangle.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef, useEffect, memo } from \"react\";\nimport { Vector3, Face3 } from \"three\";\nvar Triangle = memo(_c = _s(function (_ref) {\n  _s();\n\n  var triangleForm = _ref.triangleForm,\n      others = _objectWithoutProperties(_ref, [\"triangleForm\"]);\n\n  var _JSON$parse = JSON.parse(triangleForm),\n      vertices = _JSON$parse.vertices,\n      color = _JSON$parse.color,\n      position = _JSON$parse.position,\n      rotation = _JSON$parse.rotation;\n\n  var triangleRef = useRef();\n  var faces = [[0, 1, 2], [2, 3, 0], [1, 0, 3], [3, 2, 1]];\n  useEffect(function () {\n    triangleRef.current.geometry.computeFaceNormals();\n  }, []);\n  return __jsx(\"mesh\", _extends({\n    ref: triangleRef,\n    position: position,\n    rotation: rotation\n  }, others, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }), __jsx(\"geometry\", {\n    attach: \"geometry\",\n    vertices: vertices.map(function (v) {\n      return _construct(Vector3, _toConsumableArray(v));\n    }),\n    faces: faces.map(function (f) {\n      return _construct(Face3, _toConsumableArray(f));\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), __jsx(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n}, \"e7ajTMnbXEsPAMKekzf8dQFZKSw=\"));\n_c2 = Triangle;\nexport default Triangle;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Triangle$memo\");\n$RefreshReg$(_c2, \"Triangle\");","map":{"version":3,"sources":["/Users/vancetan/Documents/the-next-stage/Frontend/components/Triangle.js"],"names":["useRef","useEffect","memo","Vector3","Face3","Triangle","triangleForm","others","JSON","parse","vertices","color","position","rotation","triangleRef","faces","current","geometry","computeFaceNormals","map","v","f"],"mappings":";;;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,QAAwC,OAAxC;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,OAA/B;AAEA,IAAMC,QAAQ,GAAGH,IAAI,SAAC,gBAAiC;AAAA;;AAAA,MAA9BI,YAA8B,QAA9BA,YAA8B;AAAA,MAAbC,MAAa;;AAAA,oBACLC,IAAI,CAACC,KAAL,CAAWH,YAAX,CADK;AAAA,MAC7CI,QAD6C,eAC7CA,QAD6C;AAAA,MACnCC,KADmC,eACnCA,KADmC;AAAA,MAC5BC,QAD4B,eAC5BA,QAD4B;AAAA,MAClBC,QADkB,eAClBA,QADkB;;AAErD,MAAMC,WAAW,GAAGd,MAAM,EAA1B;AAEA,MAAMe,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,CAAd;AAOAd,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,WAAW,CAACE,OAAZ,CAAoBC,QAApB,CAA6BC,kBAA7B;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAM,IAAA,GAAG,EAAEJ,WAAX;AAAwB,IAAA,QAAQ,EAAEF,QAAlC;AAA4C,IAAA,QAAQ,EAAEC;AAAtD,KAAoEN,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AACE,IAAA,MAAM,EAAC,UADT;AAEE,IAAA,QAAQ,EAAEG,QAAQ,CAACS,GAAT,CAAa,UAACC,CAAD;AAAA,wBAAWjB,OAAX,qBAAsBiB,CAAtB;AAAA,KAAb,CAFZ;AAGE,IAAA,KAAK,EAAEL,KAAK,CAACI,GAAN,CAAU,UAACE,CAAD;AAAA,wBAAWjB,KAAX,qBAAoBiB,CAApB;AAAA,KAAV,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,KAAK,EAAEV,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CAzBoB,kCAArB;MAAMN,Q;AA2BN,eAAeA,QAAf","sourcesContent":["import { useRef, useEffect, memo } from \"react\";\nimport { Vector3, Face3 } from \"three\";\n\nconst Triangle = memo(({ triangleForm, ...others }) => {\n  const { vertices, color, position, rotation } = JSON.parse(triangleForm);\n  const triangleRef = useRef();\n\n  const faces = [\n    [0, 1, 2],\n    [2, 3, 0],\n    [1, 0, 3],\n    [3, 2, 1],\n  ];\n\n  useEffect(() => {\n    triangleRef.current.geometry.computeFaceNormals();\n  }, []);\n\n  return (\n    <mesh ref={triangleRef} position={position} rotation={rotation} {...others}>\n      <geometry\n        attach=\"geometry\"\n        vertices={vertices.map((v) => new Vector3(...v))}\n        faces={faces.map((f) => new Face3(...f))}\n      ></geometry>\n      <meshStandardMaterial attach=\"material\" color={color} />\n    </mesh>\n  );\n});\n\nexport default Triangle;\n"]},"metadata":{},"sourceType":"module"}