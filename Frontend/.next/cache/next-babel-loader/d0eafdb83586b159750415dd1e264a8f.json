{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport { useLayoutEffect } from \"react\";\nexport function range(size) {\n  var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return _toConsumableArray(Array(size).keys()).map(function (i) {\n    return i + start;\n  });\n}\nexport function useURLQuery() {\n  _s();\n\n  var router = useRouter();\n  return new URLSearchParams(router.asPath.slice(router.pathname.length));\n}\n\n_s(useURLQuery, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\nexport function useLockBodyScroll() {\n  _s2();\n\n  useLayoutEffect(function () {\n    var originalStyle = window.getComputedStyle(document.body).overflow;\n    document.body.style.overflow = \"hidden\";\n    return function () {\n      return document.body.style.overflow = originalStyle;\n    };\n  }, []);\n}\n\n_s2(useLockBodyScroll, \"n7/vCynhJvM+pLkyL2DMQUF0odM=\");\n\nexport function getMonthName(monthNum) {\n  var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  return months[monthNum];\n}\nexport function validateEmail(email) {\n  var _email$split = email.split(\"@\"),\n      _email$split2 = _slicedToArray(_email$split, 2),\n      emailBeforeAt = _email$split2[0],\n      emailAfterAt = _email$split2[1];\n\n  var emailRegex = /^[-!#$%&'*+0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n\n  if (email.length > 254) {\n    return false;\n  } else if (!emailRegex.test(email)) {\n    return false;\n  } else if (emailBeforeAt.length > 64) {\n    return false;\n  } else if (emailAfterAt.split(\".\").some(function (segment) {\n    return segment.length > 63;\n  })) {\n    return false;\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/vancetan/Documents/the-next-stage/Frontend/utils/index.js"],"names":["useRouter","useLayoutEffect","range","size","start","Array","keys","map","i","useURLQuery","router","URLSearchParams","asPath","slice","pathname","length","useLockBodyScroll","originalStyle","window","getComputedStyle","document","body","overflow","style","getMonthName","monthNum","months","validateEmail","email","split","emailBeforeAt","emailAfterAt","emailRegex","test","some","segment"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAO,SAASC,KAAT,CAAeC,IAAf,EAAgC;AAAA,MAAXC,KAAW,uEAAH,CAAG;AACrC,SAAO,mBAAIC,KAAK,CAACF,IAAD,CAAL,CAAYG,IAAZ,EAAJ,EAAwBC,GAAxB,CAA4B,UAACC,CAAD;AAAA,WAAOA,CAAC,GAAGJ,KAAX;AAAA,GAA5B,CAAP;AACD;AAED,OAAO,SAASK,WAAT,GAAuB;AAAA;;AAC5B,MAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,SAAO,IAAIW,eAAJ,CAAoBD,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoBH,MAAM,CAACI,QAAP,CAAgBC,MAApC,CAApB,CAAP;AACD;;GAHeN,W;UACCT,S;;;AAIjB,OAAO,SAASgB,iBAAT,GAA6B;AAAA;;AAClCf,EAAAA,eAAe,CAAC,YAAM;AACpB,QAAMgB,aAAa,GAAGC,MAAM,CAACC,gBAAP,CAAwBC,QAAQ,CAACC,IAAjC,EAAuCC,QAA7D;AACAF,IAAAA,QAAQ,CAACC,IAAT,CAAcE,KAAd,CAAoBD,QAApB,GAA+B,QAA/B;AACA,WAAO;AAAA,aAAOF,QAAQ,CAACC,IAAT,CAAcE,KAAd,CAAoBD,QAApB,GAA+BL,aAAtC;AAAA,KAAP;AACD,GAJc,EAIZ,EAJY,CAAf;AAKD;;IANeD,iB;;AAQhB,OAAO,SAASQ,YAAT,CAAsBC,QAAtB,EAAgC;AACrC,MAAMC,MAAM,GAAG,CACb,KADa,EAEb,KAFa,EAGb,KAHa,EAIb,KAJa,EAKb,KALa,EAMb,KANa,EAOb,KAPa,EAQb,KARa,EASb,KATa,EAUb,KAVa,EAWb,KAXa,EAYb,KAZa,CAAf;AAeA,SAAOA,MAAM,CAACD,QAAD,CAAb;AACD;AAED,OAAO,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,qBACGA,KAAK,CAACC,KAAN,CAAY,GAAZ,CADH;AAAA;AAAA,MAC5BC,aAD4B;AAAA,MACbC,YADa;;AAEnC,MAAMC,UAAU,GAAG,4HAAnB;;AACA,MAAIJ,KAAK,CAACb,MAAN,GAAe,GAAnB,EAAwB;AACtB,WAAO,KAAP;AACD,GAFD,MAEO,IAAI,CAACiB,UAAU,CAACC,IAAX,CAAgBL,KAAhB,CAAL,EAA6B;AAClC,WAAO,KAAP;AACD,GAFM,MAEA,IAAIE,aAAa,CAACf,MAAd,GAAuB,EAA3B,EAA+B;AACpC,WAAO,KAAP;AACD,GAFM,MAEA,IAAIgB,YAAY,CAACF,KAAb,CAAmB,GAAnB,EAAwBK,IAAxB,CAA6B,UAACC,OAAD;AAAA,WAAaA,OAAO,CAACpB,MAAR,GAAiB,EAA9B;AAAA,GAA7B,CAAJ,EAAoE;AACzE,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useLayoutEffect } from \"react\";\n\nexport function range(size, start = 0) {\n  return [...Array(size).keys()].map((i) => i + start);\n}\n\nexport function useURLQuery() {\n  const router = useRouter();\n  return new URLSearchParams(router.asPath.slice(router.pathname.length));\n}\n\nexport function useLockBodyScroll() {\n  useLayoutEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n    document.body.style.overflow = \"hidden\";\n    return () => (document.body.style.overflow = originalStyle);\n  }, []);\n}\n\nexport function getMonthName(monthNum) {\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  return months[monthNum];\n}\n\nexport function validateEmail(email) {\n  const [emailBeforeAt, emailAfterAt] = email.split(\"@\");\n  const emailRegex = /^[-!#$%&'*+0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n  if (email.length > 254) {\n    return false;\n  } else if (!emailRegex.test(email)) {\n    return false;\n  } else if (emailBeforeAt.length > 64) {\n    return false;\n  } else if (emailAfterAt.split(\".\").some((segment) => segment.length > 63)) {\n    return false;\n  }\n\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}