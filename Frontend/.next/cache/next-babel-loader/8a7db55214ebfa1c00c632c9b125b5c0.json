{"ast":null,"code":"var _jsxFileName = \"/Users/vancetan/Documents/the-next-stage/Frontend/components/Artefact.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useRef } from \"react\";\nimport OrbitControls from \"orbit-controls-es6\";\nimport { Canvas, useFrame, extend, useThree } from \"react-three-fiber\";\nimport Triangle from \"./Triangle\";\nextend({\n  OrbitControls\n});\n\nconst Controls = ({\n  interactive\n}) => {\n  const orbitRef = useRef();\n  const {\n    camera,\n    gl\n  } = useThree();\n  useFrame(() => {\n    orbitRef.current.update();\n  });\n  return __jsx(\"orbitControls\", {\n    autoRotate: true,\n    enabled: interactive,\n    enableZoom: false,\n    maxPolarAngle: Math.PI / 3,\n    minPolarAngle: Math.PI / 3,\n    ref: orbitRef,\n    args: [camera, gl.domElement],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  });\n};\n\nconst Artefact = (_ref) => {\n  let {\n    form,\n    interactive\n  } = _ref,\n      others = _objectWithoutProperties(_ref, [\"form\", \"interactive\"]);\n\n  const trianglesArr = JSON.parse(form);\n  return __jsx(Canvas, _extends({\n    pixelRatio: 2,\n    camera: {\n      position: [0, 0, 20]\n    } // onCreated={({ gl }) => {\n    //   gl.setPixelRatio(window.devicePixelRatio);\n    // }}\n\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), __jsx(\"ambientLight\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), __jsx(\"spotLight\", {\n    position: [0, 5, 10],\n    penumbra: 1,\n    castShadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), __jsx(Controls, {\n    interactive: interactive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), __jsx(\"group\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, trianglesArr.map((triangleForm, idx) => __jsx(Triangle, {\n    key: idx,\n    triangleForm: JSON.stringify(triangleForm),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Artefact;","map":{"version":3,"sources":["/Users/vancetan/Documents/the-next-stage/Frontend/components/Artefact.js"],"names":["useRef","OrbitControls","Canvas","useFrame","extend","useThree","Triangle","Controls","interactive","orbitRef","camera","gl","current","update","Math","PI","domElement","Artefact","form","others","trianglesArr","JSON","parse","position","map","triangleForm","idx","stringify"],"mappings":";;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,mBAAnD;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEAF,MAAM,CAAC;AAAEH,EAAAA;AAAF,CAAD,CAAN;;AAEA,MAAMM,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACpC,QAAMC,QAAQ,GAAGT,MAAM,EAAvB;AACA,QAAM;AAAEU,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAiBN,QAAQ,EAA/B;AAEAF,EAAAA,QAAQ,CAAC,MAAM;AACbM,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,MAAjB;AACD,GAFO,CAAR;AAIA,SACE;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,OAAO,EAAEL,WAFX;AAGE,IAAA,UAAU,EAAE,KAHd;AAIE,IAAA,aAAa,EAAEM,IAAI,CAACC,EAAL,GAAU,CAJ3B;AAKE,IAAA,aAAa,EAAED,IAAI,CAACC,EAAL,GAAU,CAL3B;AAME,IAAA,GAAG,EAAEN,QANP;AAOE,IAAA,IAAI,EAAE,CAACC,MAAD,EAASC,EAAE,CAACK,UAAZ,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CAnBD;;AAqBA,MAAMC,QAAQ,GAAG,UAAsC;AAAA,MAArC;AAAEC,IAAAA,IAAF;AAAQV,IAAAA;AAAR,GAAqC;AAAA,MAAbW,MAAa;;AACrD,QAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAArB;AAEA,SACE,MAAC,MAAD;AACE,IAAA,UAAU,EAAE,CADd;AAEE,IAAA,MAAM,EAAE;AAAEK,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP;AAAZ,KAFV,CAGE;AACA;AACA;;AALF,KAMMJ,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAW,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAArB;AAAiC,IAAA,QAAQ,EAAE,CAA3C;AAA8C,IAAA,UAAU,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,MAAC,QAAD;AAAU,IAAA,WAAW,EAAEX,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,YAAY,CAACI,GAAb,CAAiB,CAACC,YAAD,EAAeC,GAAf,KAChB,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAf;AAAoB,IAAA,YAAY,EAAEL,IAAI,CAACM,SAAL,CAAeF,YAAf,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAXF,CADF;AAmBD,CAtBD;;AAwBA,eAAeR,QAAf","sourcesContent":["import { useRef } from \"react\";\nimport OrbitControls from \"orbit-controls-es6\";\nimport { Canvas, useFrame, extend, useThree } from \"react-three-fiber\";\n\nimport Triangle from \"./Triangle\";\n\nextend({ OrbitControls });\n\nconst Controls = ({ interactive }) => {\n  const orbitRef = useRef();\n  const { camera, gl } = useThree();\n\n  useFrame(() => {\n    orbitRef.current.update();\n  });\n\n  return (\n    <orbitControls\n      autoRotate\n      enabled={interactive}\n      enableZoom={false}\n      maxPolarAngle={Math.PI / 3}\n      minPolarAngle={Math.PI / 3}\n      ref={orbitRef}\n      args={[camera, gl.domElement]}\n    />\n  );\n};\n\nconst Artefact = ({ form, interactive, ...others }) => {\n  const trianglesArr = JSON.parse(form);\n\n  return (\n    <Canvas\n      pixelRatio={2}\n      camera={{ position: [0, 0, 20] }}\n      // onCreated={({ gl }) => {\n      //   gl.setPixelRatio(window.devicePixelRatio);\n      // }}\n      {...others}\n    >\n      <ambientLight />\n      <spotLight position={[0, 5, 10]} penumbra={1} castShadow />\n      <Controls interactive={interactive} />\n      <group>\n        {trianglesArr.map((triangleForm, idx) => (\n          <Triangle key={idx} triangleForm={JSON.stringify(triangleForm)} />\n        ))}\n      </group>\n    </Canvas>\n  );\n};\n\nexport default Artefact;\n"]},"metadata":{},"sourceType":"module"}